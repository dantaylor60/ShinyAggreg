selectInput('time.Agg','temporal scale',c("aggAll",'byYear','byMonthYear','byBout')),
selectInput('typeFiles','file type for plant presence',c("none",'1m2Data','10m2Data','100m2Data','400m2Data')),
downloadButton('downloadData', 'Download')
),
mainPanel(
h2("Summary data selected"),
tableOutput("summary"),
h2("Sample data for download"),
tableOutput("aggData")
)
))
shinyApp(ui = ui, server = serverAgg)
require(chron)
require(reshape2)
require(shiny)
source("server.R")
ui <- shinyUI(fluidPage(
headerPanel('Aggregate NEON data spatially and temporally by species'),
sidebarPanel(
selectInput('group','data type',c('smallMammal','carabid','plantPresenceCover')),
selectInput('space.Agg','spatial scale',c('byDomain','bySite','byPlot')),
selectInput('time.Agg','temporal scale',c("aggAll",'byYear','byMonthYear','byBout')),
selectInput('typeFiles','file type for plant presence',c("none",'1m2Data','10m2Data','100m2Data','400m2Data')),
downloadButton('downloadData', 'Download')
),
mainPanel(
h2("Summary data selected"),
tableOutput("summary"),
h2("Sample data for download"),
tableOutput("aggData")
)
))
shinyApp(ui = ui, server = serverAgg)
require(chron)
require(reshape2)
require(shiny)
source("server.R")
ui <- shinyUI(fluidPage(
headerPanel('Aggregate NEON data spatially and temporally by species'),
sidebarPanel(
selectInput('group','data type',c('smallMammal','carabid','plantPresenceCover')),
selectInput('space.Agg','spatial scale',c('byDomain','bySite','byPlot')),
selectInput('time.Agg','temporal scale',c("aggAll",'byYear','byMonthYear','byBout')),
selectInput('typeFiles','file type for plant presence',c("none",'1m2Data','10m2Data','100m2Data','400m2Data')),
downloadButton('downloadData', 'Download')
),
mainPanel(
h2("Summary data selected"),
dataTableOutput("summary"),
h2("Sample data for download"),
dataTableOutput("aggData")
)
))
shinyApp(ui = ui, server = serverAgg)
require(chron)
require(reshape2)
require(shiny)
source("server.R")
ui <- shinyUI(fluidPage(
headerPanel('Aggregate NEON data spatially and temporally by species'),
sidebarPanel(
selectInput('group','data type',c('smallMammal','carabid','plantPresenceCover')),
selectInput('space.Agg','spatial scale',c('byDomain','bySite','byPlot')),
selectInput('time.Agg','temporal scale',c("aggAll",'byYear','byMonthYear','byBout')),
selectInput('typeFiles','file type for plant presence',c("none",'1m2Data','10m2Data','100m2Data','400m2Data')),
downloadButton('downloadData', 'Download')
),
mainPanel(
tabsetPanel(
tabPanel('data summary',
dataTableOutput("summary")),
tabPanel('data',
dataTableOutput("Data selected for download")))
)
))
shinyApp(ui = ui, server = serverAgg)
require(chron)
require(reshape2)
require(shiny)
source("server.R")
ui <- shinyUI(fluidPage(
headerPanel('Aggregate NEON data spatially and temporally by species'),
sidebarPanel(
selectInput('group','data type',c('smallMammal','carabid','plantPresenceCover')),
selectInput('space.Agg','spatial scale',c('byDomain','bySite','byPlot')),
selectInput('time.Agg','temporal scale',c("aggAll",'byYear','byMonthYear','byBout')),
selectInput('typeFiles','file type for plant presence',c("none",'1m2Data','10m2Data','100m2Data','400m2Data')),
downloadButton('downloadData', 'Download')
),
mainPanel(
tabsetPanel(
tabPanel('data summary',
dataTableOutput("summary")),
tabPanel('download data',
dataTableOutput("Data selected for download")))
)
))
shinyApp(ui = ui, server = serverAgg)
require(chron)
require(reshape2)
require(shiny)
source("server.R")
ui <- shinyUI(fluidPage(
headerPanel('Aggregate NEON data spatially and temporally by species'),
sidebarPanel(
selectInput('group','data type',c('smallMammal','carabid','plantPresenceCover')),
selectInput('space.Agg','spatial scale',c('byDomain','bySite','byPlot')),
selectInput('time.Agg','temporal scale',c("aggAll",'byYear','byMonthYear','byBout')),
selectInput('typeFiles','file type for plant presence',c("none",'1m2Data','10m2Data','100m2Data','400m2Data')),
downloadButton('downloadData', 'Download')
),
mainPanel(
tabsetPanel(
tabPanel('data summary',
dataTableOutput("summary")),
tabPanel('download data',
dataTableOutput("Data selected for download")))
)
))
shinyApp(ui = ui, server = serverAgg)
require(chron)
require(reshape2)
require(shiny)
source("server.R")
ui <- shinyUI(fluidPage(
headerPanel('Aggregate NEON data spatially and temporally by species'),
sidebarPanel(
selectInput('group','data type',c('smallMammal','carabid','plantPresenceCover')),
selectInput('space.Agg','spatial scale',c('byDomain','bySite','byPlot')),
selectInput('time.Agg','temporal scale',c("aggAll",'byYear','byMonthYear','byBout')),
selectInput('typeFiles','file type for plant presence',c("none",'1m2Data','10m2Data','100m2Data','400m2Data')),
downloadButton('downloadData', 'Download')
),
mainPanel(
tabsetPanel(
tabPanel('data summary',
dataTableOutput("summary")),
tabPanel('download data',
dataTableOutput("Data selected for download")))
)
))
shinyApp(ui = ui, server = serverAgg)
require(chron)
require(reshape2)
require(shiny)
source("server.R")
ui <- shinyUI(fluidPage(
headerPanel('Aggregate NEON data spatially and temporally by species'),
sidebarPanel(
selectInput('group','data type',c('smallMammal','carabid','plantPresenceCover')),
selectInput('space.Agg','spatial scale',c('byDomain','bySite','byPlot')),
selectInput('time.Agg','temporal scale',c("aggAll",'byYear','byMonthYear','byBout')),
selectInput('typeFiles','file type for plant presence',c("none",'1m2Data','10m2Data','100m2Data','400m2Data')),
downloadButton('downloadData', 'Download')
),
mainPanel(
tabsetPanel(
tabPanel('data summary',
dataTableOutput("summary")),
tabPanel('download data',
dataTableOutput("Data selected for download")))
)
))
shinyApp(ui = ui, server = serverAgg)
require(chron)
require(reshape2)
require(shiny)
source("server.R")
ui <- shinyUI(fluidPage(
headerPanel('Aggregate NEON data spatially and temporally by species'),
sidebarPanel(
selectInput('group','data type',c('smallMammal','carabid','plantPresenceCover')),
selectInput('space.Agg','spatial scale',c('byDomain','bySite','byPlot')),
selectInput('time.Agg','temporal scale',c("aggAll",'byYear','byMonthYear','byBout')),
selectInput('typeFiles','file type for plant presence',c("none",'1m2Data','10m2Data','100m2Data','400m2Data')),
downloadButton('downloadData', 'Download')
),
mainPanel(
tabsetPanel(
tabPanel('data summary',
dataTableOutput("summary")),
tabPanel('download data',
dataTableOutput("Data selected for download")))
)
))
shinyApp(ui = ui, server = serverAgg)
require(chron)
require(reshape2)
require(shiny)
source("server.R")
ui <- shinyUI(fluidPage(
headerPanel('Aggregate NEON data spatially and temporally by species'),
sidebarPanel(
selectInput('group','data type',c('smallMammal','carabid','plantPresenceCover')),
selectInput('space.Agg','spatial scale',c('byDomain','bySite','byPlot')),
selectInput('time.Agg','temporal scale',c("aggAll",'byYear','byMonthYear','byBout')),
selectInput('typeFiles','file type for plant presence',c("none",'1m2Data','10m2Data','100m2Data','400m2Data')),
sliderInput('numcols',
label = "number of columns to display",
min = 3, max = 7, value = c(3:7)),
downloadButton('downloadData', 'Download')
),
mainPanel(
tabsetPanel(
tabPanel('data summary',
dataTableOutput("summary")),
tabPanel('download data',
dataTableOutput("Data selected for download")))
)
))
shinyApp(ui = ui, server = serverAgg)
require(chron)
require(reshape2)
require(shiny)
source("server.R")
ui <- shinyUI(fluidPage(
headerPanel('Aggregate NEON data spatially and temporally by species'),
sidebarPanel(
selectInput('group','data type',c('smallMammal','carabid','plantPresenceCover')),
selectInput('space.Agg','spatial scale',c('byDomain','bySite','byPlot')),
selectInput('time.Agg','temporal scale',c("aggAll",'byYear','byMonthYear','byBout')),
selectInput('typeFiles','file type for plant presence',c("none",'1m2Data','10m2Data','100m2Data','400m2Data')),
sliderInput('numcols',
label = "number of columns to display",
min = 3, max = 7, value = c(3:7)),
downloadButton('downloadData', 'Download')
),
mainPanel(
tabsetPanel(
tabPanel('data summary',
dataTableOutput("summary")),
tabPanel('download data',
dataTableOutput("Data selected for download")))
)
))
shinyApp(ui = ui, server = serverAgg)
require(chron)
require(reshape2)
require(shiny)
source("server.R")
ui <- shinyUI(fluidPage(
headerPanel('Aggregate NEON data spatially and temporally by species'),
sidebarPanel(
selectInput('group','data type',c('smallMammal','carabid','plantPresenceCover')),
selectInput('space.Agg','spatial scale',c('byDomain','bySite','byPlot')),
selectInput('time.Agg','temporal scale',c("aggAll",'byYear','byMonthYear','byBout')),
selectInput('typeFiles','file type for plant presence',c("none",'1m2Data','10m2Data','100m2Data','400m2Data')),
sliderInput('numcols',
label = "number of columns to display",
min = 3, max = 7, value = c(3:7)),
downloadButton('downloadData', 'Download')
),
mainPanel(
tabsetPanel(
tabPanel('data summary',
dataTableOutput("summary")),
tabPanel('download data',
dataTableOutput("Data selected for download")))
)
))
shinyApp(ui = ui, server = serverAgg)
require(chron)
require(reshape2)
require(shiny)
source("server.R")
ui <- shinyUI(fluidPage(
headerPanel('Aggregate NEON data spatially and temporally by species'),
sidebarPanel(
selectInput('group','data type',c('smallMammal','carabid','plantPresenceCover')),
selectInput('space.Agg','spatial scale',c('byDomain','bySite','byPlot')),
selectInput('time.Agg','temporal scale',c("aggAll",'byYear','byMonthYear','byBout')),
selectInput('typeFiles','file type for plant presence',c("none",'1m2Data','10m2Data','100m2Data','400m2Data')),
sliderInput('numcols',
label = "number of columns to display",
min = 3, max = 7, value = c(3:7)),
downloadButton('downloadData', 'Download')
),
mainPanel(
tabsetPanel(
tabPanel('data summary',
dataTableOutput("summary")),
tabPanel('download data',
dataTableOutput("Data selected for download")))
)
))
shinyApp(ui = ui, server = serverAgg)
require(chron)
require(reshape2)
require(shiny)
source("server.R")
ui <- shinyUI(fluidPage(
headerPanel('Aggregate NEON data spatially and temporally by species'),
sidebarPanel(
selectInput('group','data type',c('smallMammal','carabid','plantPresenceCover')),
selectInput('space.Agg','spatial scale',c('byDomain','bySite','byPlot')),
selectInput('time.Agg','temporal scale',c("aggAll",'byYear','byMonthYear','byBout')),
selectInput('typeFiles','file type for plant presence',c("none",'1m2Data','10m2Data','100m2Data','400m2Data')),
sliderInput('numcols',
label = "number of columns to display",
min = 3, max = 7, value = c(3:7)),
downloadButton('downloadData', 'Download')
),
mainPanel(
tabsetPanel(
tabPanel('data summary',
dataTableOutput("summary")),
tabPanel('download data',
dataTableOutput("Data selected for download")))
)
))
shinyApp(ui = ui, server = serverAgg)
require(chron)
require(reshape2)
require(shiny)
source("server.R")
ui <- shinyUI(fluidPage(
headerPanel('Aggregate NEON data spatially and temporally by species'),
sidebarPanel(
selectInput('group','data type',c('smallMammal','carabid','plantPresenceCover')),
selectInput('space.Agg','spatial scale',c('byDomain','bySite','byPlot')),
selectInput('time.Agg','temporal scale',c("aggAll",'byYear','byMonthYear','byBout')),
selectInput('typeFiles','file type for plant presence',c("none",'1m2Data','10m2Data','100m2Data','400m2Data')),
sliderInput('numcols', label = "number of columns to display",min = 3, max = 7, value = c(3:7)),
downloadButton('downloadData', 'Download') ),
mainPanel(
tabsetPanel(
tabPanel('data summary',
dataTableOutput("summary")),
tabPanel('download data',
dataTableOutput("Data selected for download")))
)
))
shinyApp(ui = ui, server = serverAgg)
require(chron)
require(reshape2)
require(shiny)
source("server.R")
ui <- shinyUI(fluidPage(
headerPanel('Aggregate NEON data spatially and temporally by species'),
sidebarPanel(
selectInput('group','data type',c('smallMammal','carabid','plantPresenceCover')),
selectInput('space.Agg','spatial scale',c('byDomain','bySite','byPlot')),
selectInput('time.Agg','temporal scale',c("aggAll",'byYear','byMonthYear','byBout')),
selectInput('typeFiles','file type for plant presence',c("none",'1m2Data','10m2Data','100m2Data','400m2Data')),
sliderInput('numcols', label = "number of columns to display",min = 3, max = 7, value = c(3:7)),
downloadButton('downloadData', 'Download') ),
mainPanel(
tabsetPanel(
tabPanel('data summary',
dataTableOutput("summary")),
tabPanel('download data',
dataTableOutput("Data selected for download")))
)
))
shinyApp(ui = ui, server = serverAgg)
require(chron)
require(reshape2)
require(shiny)
source("server.R")
ui <- shinyUI(fluidPage(
headerPanel('Aggregate NEON data spatially and temporally by species'),
sidebarPanel(
selectInput('group','data type',c('smallMammal','carabid','plantPresenceCover')),
selectInput('space.Agg','spatial scale',c('byDomain','bySite','byPlot')),
selectInput('time.Agg','temporal scale',c("aggAll",'byYear','byMonthYear','byBout')),
selectInput('typeFiles','file type for plant presence',c("none",'1m2Data','10m2Data','100m2Data','400m2Data')),
sliderInput('numcols', label = "number of columns to display",min = 3, max = 7, value = c(3:7)),
downloadButton('downloadData', 'Download') ),
mainPanel(
tabsetPanel(
tabPanel('data summary',
dataTableOutput("summary")),
tabPanel('download data',
dataTableOutput("aggData")))
)
))
shinyApp(ui = ui, server = serverAgg)
require(chron)
require(reshape2)
require(shiny)
source("server.R")
ui <- shinyUI(fluidPage(
headerPanel('Aggregate NEON data spatially and temporally by species'),
sidebarPanel(
selectInput('group','data type',c('smallMammal','carabid','plantPresenceCover')),
selectInput('space.Agg','spatial scale',c('byDomain','bySite','byPlot')),
selectInput('time.Agg','temporal scale',c("aggAll",'byYear','byMonthYear','byBout')),
selectInput('typeFiles','file type for plant presence',c("none",'1m2Data','10m2Data','100m2Data','400m2Data')),
sliderInput('numcols', label = "number of columns to display",min = 3, max = 7, value = c(3:7)),
downloadButton('downloadData', 'Download') ),
mainPanel(
tabsetPanel(
tabPanel('data summary',
dataTableOutput("summary")),
tabPanel('download data',
dataTableOutput("aggData")))
)
))
shinyApp(ui = ui, server = serverAgg)
require(chron)
require(reshape2)
require(shiny)
source("server.R")
ui <- shinyUI(fluidPage(
headerPanel('Aggregate NEON data spatially and temporally by species'),
sidebarPanel(
selectInput('group','data type',c('smallMammal','carabid','plantPresenceCover')),
selectInput('space.Agg','spatial scale',c('byDomain','bySite','byPlot')),
selectInput('time.Agg','temporal scale',c("aggAll",'byYear','byMonthYear','byBout')),
selectInput('typeFiles','file type for plant presence',c("none",'1m2Data','10m2Data','100m2Data','400m2Data')),
sliderInput('numcols', label = "number of columns to display",min = 1, max = 7, value = c(1:7)),
downloadButton('downloadData', 'Download') ),
mainPanel(
tabsetPanel(
tabPanel('data summary',
dataTableOutput("summary")),
tabPanel('download data',
dataTableOutput("aggData")))
)
))
shinyApp(ui = ui, server = serverAgg)
seq(c(1,2))
seq(c(1,5))
require(chron)
require(reshape2)
require(shiny)
source("server.R")
ui <- shinyUI(fluidPage(
headerPanel('Aggregate NEON data spatially and temporally by species'),
sidebarPanel(
selectInput('group','data type',c('smallMammal','carabid','plantPresenceCover')),
selectInput('space.Agg','spatial scale',c('byDomain','bySite','byPlot')),
selectInput('time.Agg','temporal scale',c("aggAll",'byYear','byMonthYear','byBout')),
selectInput('typeFiles','file type for plant presence',c("none",'1m2Data','10m2Data','100m2Data','400m2Data')),
numericInput('numcols', label = "number of columns to display",value=2),
downloadButton('downloadData', 'Download') ),
mainPanel(
tabsetPanel(
tabPanel('data summary',
dataTableOutput("summary")),
tabPanel('download data',
dataTableOutput("aggData")))
)
))
shinyApp(ui = ui, server = serverAgg)
require(chron)
require(reshape2)
require(shiny)
source("server.R")
ui <- shinyUI(fluidPage(
headerPanel('Aggregate NEON data spatially and temporally by species'),
sidebarPanel(
selectInput('group','data type',c('smallMammal','carabid','plantPresenceCover')),
selectInput('space.Agg','spatial scale',c('byDomain','bySite','byPlot')),
selectInput('time.Agg','temporal scale',c("aggAll",'byYear','byMonthYear','byBout')),
selectInput('typeFiles','file type for plant presence',c("none",'1m2Data','10m2Data','100m2Data','400m2Data')),
numericInput('numcols', label = "number of columns to display",value=2),
downloadButton('downloadData', 'Download') ),
mainPanel(
tabsetPanel(
tabPanel('data summary',
dataTableOutput("summary")),
tabPanel('download data',
dataTableOutput("aggData")))
)
))
shinyApp(ui = ui, server = serverAgg)
setwd("~/Dropbox/Research/Duke2015/NEON/DataManipulation/ShinyAggreg")
require(chron)
require(reshape2)
require(shiny)
source("server.R")
ui <- shinyUI(fluidPage(
headerPanel('Aggregate NEON data spatially and temporally by species'),
sidebarPanel(
selectInput('group','data type',c('smallMammal','carabid','plantPresenceCover')),
selectInput('space.Agg','spatial scale',c('byDomain','bySite','byPlot')),
selectInput('time.Agg','temporal scale',c("aggAll",'byYear','byMonthYear','byBout')),
selectInput('typeFiles','file type for plant presence',c("none",'1m2Data','10m2Data','100m2Data','400m2Data')),
numericInput('numcols', label = "number of columns to display",value=2),
downloadButton('downloadData', 'Download') ),
mainPanel(
tabsetPanel(
tabPanel('data summary',
dataTableOutput("summary")),
tabPanel('download data',
dataTableOutput("aggData")))
)
))
shinyApp(ui = ui, server = serverAgg)
require(chron)
require(reshape2)
require(shiny)
source("server.R")
ui <- shinyUI(fluidPage(
headerPanel('Aggregate NEON data spatially and temporally by species'),
sidebarPanel(
selectInput('group','data type',c('smallMammal','carabid','plantPresenceCover')),
selectInput('space.Agg','spatial scale',c('byDomain','bySite','byPlot')),
selectInput('time.Agg','temporal scale',c("aggAll",'byYear','byMonthYear','byBout')),
selectInput('typeFiles','file type for plant presence',c("none",'1m2Data','10m2Data','100m2Data','400m2Data')),
numericInput('numcols', label = "number of columns to display",value=2),
downloadButton('downloadData', 'Download') ),
mainPanel(
tabsetPanel(
tabPanel('data summary',
dataTableOutput("summary")),
tabPanel('download data',
dataTableOutput("aggData")))
)
))
shinyApp(ui = ui, server = serverAgg)
